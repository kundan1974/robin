# Generated by Django 3.2.15 on 2023-02-03 17:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AjccEdition',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('ajcc_edition', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='BiopsyGrade',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('grade', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ChemoDrugs',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'patient_data_drugs',
            },
        ),
        migrations.CreateModel(
            name='ChemoProtocolNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('protocol', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClinM',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('c_m', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ClinN',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('c_n', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ClinT',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('c_t', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Comorbidity',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False, unique=True)),
                ('comorbidity', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='DVHParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('Description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='DxType',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='FMAID',
            fields=[
                ('fma_id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('shortname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'patient_data_fmaid',
            },
        ),
        migrations.CreateModel(
            name='FollowupActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('actions', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='FollowupVisitsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('visittype', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='HPE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250)),
                ('hpe', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ICDMainSites',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('site', models.CharField(max_length=250)),
                ('icd_code', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OurDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_diagnosis', models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreSimStatus',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PreSimulation',
            fields=[
                ('presimid', models.AutoField(db_column='presimID', primary_key=True, serialize=False)),
                ('day1date', models.DateTimeField(blank=True, null=True)),
                ('ul_amp_d1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ll_amp_d1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_amp_d1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ahd_d1', models.IntegerField(blank=True, null=True)),
                ('al_d1', models.BooleanField()),
                ('d1remarks', models.TextField(blank=True, null=True)),
                ('day2date', models.DateTimeField(blank=True, null=True)),
                ('ul_amp_d2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ll_amp_d2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_amp_d2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ahd_d2', models.IntegerField(blank=True, null=True)),
                ('al_d2', models.BooleanField()),
                ('d2remarks', models.TextField(blank=True, null=True)),
                ('day3date', models.DateTimeField(blank=True, null=True)),
                ('ul_amp_d3', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ll_amp_d3', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_amp_d3', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ahd_d3', models.IntegerField(blank=True, null=True)),
                ('al_d3', models.BooleanField()),
                ('d3remarks', models.TextField(blank=True, null=True)),
                ('day4date', models.DateTimeField(blank=True, null=True)),
                ('ul_amp_d4', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ll_amp_d4', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_amp_d4', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ahd_d4', models.IntegerField(blank=True, null=True)),
                ('al_d4', models.BooleanField()),
                ('d4remarks', models.TextField(blank=True, null=True)),
                ('day5date', models.DateTimeField(blank=True, null=True)),
                ('ul_amp_d5', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ll_amp_d5', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_amp_d5', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ahd_d5', models.IntegerField(blank=True, null=True)),
                ('al_d5', models.BooleanField()),
                ('d5remarks', models.TextField(blank=True, null=True)),
                ('xray_status', models.BooleanField()),
                ('final_remarks', models.TextField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('last_updated', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('assessedby_day1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessedby_day1', to=settings.AUTH_USER_MODEL)),
                ('assessedby_day2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessedby_day2', to=settings.AUTH_USER_MODEL)),
                ('assessedby_day3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessedby_day3', to=settings.AUTH_USER_MODEL)),
                ('assessedby_day4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessedby_day4', to=settings.AUTH_USER_MODEL)),
                ('assessedby_day5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessedby_day5', to=settings.AUTH_USER_MODEL)),
                ('day1status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='day1status', to='patient_data.presimstatus')),
                ('day2status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='day2status', to='patient_data.presimstatus')),
                ('day3status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='day3status', to='patient_data.presimstatus')),
                ('day4status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='day4status', to='patient_data.presimstatus')),
                ('day5status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='day5status', to='patient_data.presimstatus')),
            ],
            options={
                'db_table': 'presimulation',
            },
        ),
        migrations.CreateModel(
            name='Referredby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refby', models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RTIntent',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('intent', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RTMachines',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('rtmachines', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RTSites',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('site', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RTStatus',
            fields=[
                ('id', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RTTech',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('tech', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RTVolumes',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('volume', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='S1ParentMain',
            fields=[
                ('s1_id', models.AutoField(primary_key=True, serialize=False)),
                ('crnumber', models.CharField(max_length=16, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.SmallIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('reg_date', models.DateTimeField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('ecog', models.CharField(blank=True, max_length=250, null=True)),
                ('doc_type', models.CharField(blank=True, max_length=45, null=True)),
                ('doc_id', models.CharField(blank=True, max_length=45, null=True)),
                ('smoking', models.CharField(blank=True, max_length=45, null=True)),
                ('smoking_status', models.CharField(blank=True, max_length=45, null=True)),
                ('smoking_volume', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.city')),
                ('comorbidity', models.ManyToManyField(blank=True, to='patient_data.Comorbidity')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 's1_parent_main',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='S2Diagnosis',
            fields=[
                ('s2_id', models.AutoField(primary_key=True, serialize=False)),
                ('laterality', models.CharField(blank=True, max_length=45, null=True)),
                ('dx_date', models.DateTimeField(blank=True, null=True)),
                ('biopsy_no', models.CharField(blank=True, max_length=45, null=True)),
                ('biopsy', models.CharField(blank=True, max_length=254, null=True)),
                ('biopsy_date', models.DateTimeField(blank=True, null=True)),
                ('confirmed_by', models.CharField(blank=True, max_length=45, null=True)),
                ('er', models.CharField(blank=True, max_length=45, null=True)),
                ('pr', models.CharField(blank=True, max_length=45, null=True)),
                ('her2neu', models.CharField(blank=True, max_length=45, null=True)),
                ('braca1', models.CharField(blank=True, max_length=45, null=True)),
                ('braca2', models.CharField(blank=True, max_length=45, null=True)),
                ('egfr', models.CharField(blank=True, max_length=45, null=True)),
                ('alk', models.CharField(blank=True, max_length=45, null=True)),
                ('ros', models.CharField(blank=True, max_length=45, null=True)),
                ('pdl_1', models.CharField(blank=True, max_length=45, null=True)),
                ('pdl_1_levels', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('braf', models.CharField(blank=True, max_length=45, null=True)),
                ('met', models.CharField(blank=True, max_length=45, null=True)),
                ('ret', models.CharField(blank=True, max_length=45, null=True)),
                ('hpv', models.CharField(blank=True, max_length=45, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('biopsy_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.biopsygrade')),
                ('c_ajcc_edition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.ajccedition')),
                ('c_m', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.clinm')),
                ('c_n', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.clinn')),
            ],
            options={
                'db_table': 's2_child_dx',
            },
        ),
        migrations.CreateModel(
            name='S3CarePlan',
            fields=[
                ('s3_id', models.AutoField(primary_key=True, serialize=False)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('enddate', models.DateTimeField(blank=True, null=True)),
                ('intent', models.CharField(blank=True, max_length=45, null=True)),
                ('radiotherapy', models.CharField(blank=True, max_length=45, null=True)),
                ('surgery', models.CharField(blank=True, max_length=45, null=True)),
                ('chemotherapy', models.CharField(blank=True, max_length=45, null=True)),
                ('brachytherapy', models.CharField(blank=True, max_length=45, null=True)),
                ('hormone', models.CharField(blank=True, max_length=45, null=True)),
                ('immunotherapy', models.CharField(blank=True, max_length=45, null=True)),
                ('bmt', models.CharField(blank=True, max_length=45, null=True)),
                ('targettherapy', models.CharField(blank=True, max_length=45, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s2_id', models.ForeignKey(db_column='s2_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s2diagnosis')),
            ],
            options={
                'db_table': 's3_child_cp',
            },
        ),
        migrations.CreateModel(
            name='S4RT',
            fields=[
                ('s4_id', models.AutoField(primary_key=True, serialize=False)),
                ('simdate', models.DateTimeField(blank=True, null=True)),
                ('rtdose1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('rtdosefr1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('modality1', models.CharField(blank=True, max_length=45, null=True)),
                ('rtdose2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('rtdosefr2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('modality2', models.CharField(blank=True, max_length=45, null=True)),
                ('rtdose3', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('rtdosefr3', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('modality3', models.CharField(blank=True, max_length=45, null=True)),
                ('rtdose4', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('rtdosefr4', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('modality4', models.CharField(blank=True, max_length=45, null=True)),
                ('rtstartdate', models.DateTimeField(blank=True, null=True)),
                ('rtfinishdate', models.DateTimeField(blank=True, null=True)),
                ('institution', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('rtindication', models.ForeignKey(blank=True, db_column='rtindication', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.rtintent')),
                ('rtmachine', models.ForeignKey(blank=True, db_column='rtmachine', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rtmachine', to='patient_data.rtmachines')),
                ('rtsite_main', models.ManyToManyField(blank=True, to='patient_data.FMAID')),
            ],
            options={
                'db_table': 's4_child_cp_rt',
            },
        ),
        migrations.CreateModel(
            name='SimStatus',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250)),
                ('site', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StageGroup',
            fields=[
                ('code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('stage_group', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StrName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('strname', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StrNameClassifierBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('classifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StrNameClassifierCustom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('classifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StrNameClassifierDose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('classifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StrNameClassifierImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('classifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StrNameClassifierNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('classifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StrType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, unique=True)),
                ('strtype', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SxCodes',
            fields=[
                ('code', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('surgery', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'patient_data_sxcode',
            },
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('simid', models.AutoField(db_column='simID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=45)),
                ('simdate', models.DateTimeField(db_column='SimDate')),
                ('simnotes', models.TextField(blank=True, db_column='SimNotes', null=True)),
                ('impdate', models.DateTimeField(db_column='ImpDate')),
                ('impnotes', models.TextField(blank=True, db_column='ImpNotes', null=True)),
                ('futureplan', models.TextField(blank=True, db_column='FuturePlan', null=True)),
                ('dosephase1', models.DecimalField(blank=True, db_column='DosePhase1', decimal_places=2, max_digits=5, null=True)),
                ('fxphase1', models.IntegerField(blank=True, db_column='FxPhase1', null=True)),
                ('dosephase2', models.DecimalField(blank=True, db_column='DosePhase2', decimal_places=2, max_digits=5, null=True)),
                ('fxphase2', models.IntegerField(blank=True, db_column='FxPhase2', null=True)),
                ('dosephase3', models.DecimalField(blank=True, db_column='DosePhase3', decimal_places=2, max_digits=5, null=True)),
                ('fxphase3', models.IntegerField(blank=True, db_column='FxPhase3', null=True)),
                ('dosephase4', models.DecimalField(blank=True, db_column='DosePhase4', decimal_places=2, max_digits=5, null=True)),
                ('fxphase4', models.IntegerField(blank=True, db_column='FxPhase4', null=True)),
                ('totaldose', models.DecimalField(blank=True, db_column='TotalDose', decimal_places=2, max_digits=5, null=True)),
                ('totalfractions', models.IntegerField(blank=True, db_column='TotalFractions', null=True)),
                ('send_mail', models.BooleanField(default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('tentativecompletiondate', models.DateTimeField(blank=True, db_column='TentativeCompletionDate', null=True)),
                ('actualcompletiondate', models.DateTimeField(blank=True, db_column='ActualCompletionDate', null=True)),
                ('as_date', models.DateTimeField(blank=True, db_column='As_Date', null=True)),
                ('donefr', models.IntegerField(blank=True, db_column='DoneFr', null=True)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('assignedto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='AssignedTo', to=settings.AUTH_USER_MODEL)),
                ('icdmainsite', models.ManyToManyField(blank=True, to='patient_data.FMAID')),
                ('initialstatus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.simstatus')),
                ('intent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.rtintent')),
                ('presimid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.presimulation')),
                ('s2_id', models.ForeignKey(db_column='s2_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sim_diagnosis_id', to='patient_data.s2diagnosis')),
                ('s3_id', models.ForeignKey(blank=True, db_column='s3_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sim_careplan_id', to='patient_data.s3careplan')),
                ('simparent', models.ForeignKey(db_column='simParent_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.rtsites')),
                ('technique', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.rttech')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('volumes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.rtvolumes')),
            ],
            options={
                'db_table': 'simulation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='S8FUP',
            fields=[
                ('s8_id', models.AutoField(primary_key=True, serialize=False)),
                ('visitdate', models.DateTimeField()),
                ('Weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('PerfStatus', models.CharField(blank=True, max_length=45, null=True)),
                ('Nextvisit', models.DateTimeField(blank=True, null=True)),
                ('RecordRecc', models.CharField(blank=True, max_length=45, null=True)),
                ('LRstatus', models.CharField(blank=True, max_length=45, null=True)),
                ('RRstatus', models.CharField(blank=True, max_length=45, null=True)),
                ('DMstatus', models.CharField(blank=True, max_length=45, null=True)),
                ('Death', models.CharField(blank=True, max_length=45, null=True)),
                ('CauseDeath', models.CharField(blank=True, max_length=45, null=True)),
                ('Datedeath', models.DateTimeField(blank=True, null=True)),
                ('ToxType1', models.CharField(blank=True, max_length=45, null=True)),
                ('SeverityT1', models.CharField(blank=True, max_length=45, null=True)),
                ('ToxType2', models.CharField(blank=True, max_length=45, null=True)),
                ('SeverityT2', models.CharField(blank=True, max_length=45, null=True)),
                ('ToxType3', models.CharField(blank=True, max_length=45, null=True)),
                ('SeverityT3', models.CharField(blank=True, max_length=45, null=True)),
                ('ToxType4', models.CharField(blank=True, max_length=45, null=True)),
                ('SeverityT4', models.CharField(blank=True, max_length=45, null=True)),
                ('ToxType5', models.CharField(blank=True, max_length=45, null=True)),
                ('SeverityT5', models.CharField(blank=True, max_length=45, null=True)),
                ('Symp1', models.CharField(blank=True, max_length=100, null=True)),
                ('Symp2', models.CharField(blank=True, max_length=100, null=True)),
                ('Symp3', models.CharField(blank=True, max_length=100, null=True)),
                ('Symp4', models.CharField(blank=True, max_length=100, null=True)),
                ('Symp5', models.CharField(blank=True, max_length=100, null=True)),
                ('Symp6', models.CharField(blank=True, max_length=100, null=True)),
                ('Symp7', models.CharField(blank=True, max_length=100, null=True)),
                ('Symp1Type', models.CharField(blank=True, max_length=15, null=True)),
                ('Symp2Type', models.CharField(blank=True, max_length=15, null=True)),
                ('Symp3Type', models.CharField(blank=True, max_length=15, null=True)),
                ('Symp4Type', models.CharField(blank=True, max_length=15, null=True)),
                ('Symp5Type', models.CharField(blank=True, max_length=15, null=True)),
                ('Symp6Type', models.CharField(blank=True, max_length=15, null=True)),
                ('Symp7Type', models.CharField(blank=True, max_length=15, null=True)),
                ('DrugRx1', models.CharField(blank=True, max_length=45, null=True)),
                ('DrugRx2', models.CharField(blank=True, max_length=45, null=True)),
                ('DrugRx3', models.CharField(blank=True, max_length=45, null=True)),
                ('DrugRx4', models.CharField(blank=True, max_length=45, null=True)),
                ('DrugRx5', models.CharField(blank=True, max_length=45, null=True)),
                ('DrugRx6', models.CharField(blank=True, max_length=45, null=True)),
                ('Rx1Fx', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx2Fx', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx3Fx', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx4Fx', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx5Fx', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx6Fx', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx1Route', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx2Route', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx3Route', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx4Route', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx5Route', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx6Route', models.CharField(blank=True, max_length=15, null=True)),
                ('Rx1Dur', models.IntegerField(blank=True, null=True)),
                ('Rx2Dur', models.IntegerField(blank=True, null=True)),
                ('Rx3Dur', models.IntegerField(blank=True, null=True)),
                ('Rx4Dur', models.IntegerField(blank=True, null=True)),
                ('Rx5Dur', models.IntegerField(blank=True, null=True)),
                ('Rx6Dur', models.IntegerField(blank=True, null=True)),
                ('Rx1Inst', models.CharField(blank=True, max_length=100, null=True)),
                ('Rx2Inst', models.CharField(blank=True, max_length=100, null=True)),
                ('Rx3Inst', models.CharField(blank=True, max_length=100, null=True)),
                ('Rx4Inst', models.CharField(blank=True, max_length=100, null=True)),
                ('Rx5Inst', models.CharField(blank=True, max_length=100, null=True)),
                ('Rx6Inst', models.CharField(blank=True, max_length=100, null=True)),
                ('RxDose1', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('RxDose2', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('RxDose3', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('RxDose4', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('RxDose5', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('RxDose6', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('RxUnit1', models.CharField(blank=True, max_length=10, null=True)),
                ('RxUnit2', models.CharField(blank=True, max_length=10, null=True)),
                ('RxUnit3', models.CharField(blank=True, max_length=10, null=True)),
                ('RxUnit4', models.CharField(blank=True, max_length=10, null=True)),
                ('RxUnit5', models.CharField(blank=True, max_length=10, null=True)),
                ('RxUnit6', models.CharField(blank=True, max_length=10, null=True)),
                ('Intervention1', models.CharField(blank=True, max_length=45, null=True)),
                ('Intervention2', models.CharField(blank=True, max_length=45, null=True)),
                ('Intervention3', models.CharField(blank=True, max_length=45, null=True)),
                ('Intervention4', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCTSite', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCTSite1', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCTSite2', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCTSite3', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCTSite4', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCT', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCT1', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCT2', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCT3', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCT4', models.CharField(blank=True, max_length=45, null=True)),
                ('PETCTNotes', models.CharField(blank=True, max_length=255, null=True)),
                ('PETCTNotes1', models.CharField(blank=True, max_length=255, null=True)),
                ('PETCTNotes2', models.CharField(blank=True, max_length=255, null=True)),
                ('PETCTNotes3', models.CharField(blank=True, max_length=255, null=True)),
                ('PETCTNotes4', models.CharField(blank=True, max_length=255, null=True)),
                ('PETCTReport', models.CharField(blank=True, max_length=255, null=True)),
                ('CTSite', models.CharField(blank=True, max_length=45, null=True)),
                ('CTSite1', models.CharField(blank=True, max_length=45, null=True)),
                ('CTSite2', models.CharField(blank=True, max_length=45, null=True)),
                ('CTSite3', models.CharField(blank=True, max_length=45, null=True)),
                ('CTSite4', models.CharField(blank=True, max_length=45, null=True)),
                ('CECT', models.CharField(blank=True, max_length=45, null=True)),
                ('CECT1', models.CharField(blank=True, max_length=45, null=True)),
                ('CECT2', models.CharField(blank=True, max_length=45, null=True)),
                ('CECT3', models.CharField(blank=True, max_length=45, null=True)),
                ('CECT4', models.CharField(blank=True, max_length=45, null=True)),
                ('CECTNotes', models.CharField(blank=True, max_length=255, null=True)),
                ('CECTNotes1', models.CharField(blank=True, max_length=255, null=True)),
                ('CECTNotes2', models.CharField(blank=True, max_length=255, null=True)),
                ('CECTNotes3', models.CharField(blank=True, max_length=255, null=True)),
                ('CECTNotes4', models.CharField(blank=True, max_length=255, null=True)),
                ('LDCT', models.CharField(blank=True, max_length=45, null=True)),
                ('LDCTNotes', models.CharField(blank=True, max_length=255, null=True)),
                ('UGIE', models.CharField(blank=True, max_length=45, null=True)),
                ('UGIENotes', models.CharField(blank=True, max_length=255, null=True)),
                ('XRaySite', models.CharField(blank=True, max_length=45, null=True)),
                ('XRaySite1', models.CharField(blank=True, max_length=45, null=True)),
                ('XRaySite2', models.CharField(blank=True, max_length=45, null=True)),
                ('XRaySite3', models.CharField(blank=True, max_length=45, null=True)),
                ('XRaySite4', models.CharField(blank=True, max_length=45, null=True)),
                ('XRay', models.CharField(blank=True, max_length=45, null=True)),
                ('XRay1', models.CharField(blank=True, max_length=45, null=True)),
                ('XRay2', models.CharField(blank=True, max_length=45, null=True)),
                ('XRay3', models.CharField(blank=True, max_length=45, null=True)),
                ('XRay4', models.CharField(blank=True, max_length=45, null=True)),
                ('XRayNotes', models.CharField(blank=True, max_length=255, null=True)),
                ('XRayNotes1', models.CharField(blank=True, max_length=255, null=True)),
                ('XRayNotes2', models.CharField(blank=True, max_length=255, null=True)),
                ('XRayNotes3', models.CharField(blank=True, max_length=255, null=True)),
                ('XRayNotes4', models.CharField(blank=True, max_length=255, null=True)),
                ('MRSite', models.CharField(blank=True, max_length=45, null=True)),
                ('MRSite1', models.CharField(blank=True, max_length=45, null=True)),
                ('MRSite2', models.CharField(blank=True, max_length=45, null=True)),
                ('MRSite3', models.CharField(blank=True, max_length=45, null=True)),
                ('MRSite4', models.CharField(blank=True, max_length=45, null=True)),
                ('MR', models.CharField(blank=True, max_length=45, null=True)),
                ('MR1', models.CharField(blank=True, max_length=45, null=True)),
                ('MR2', models.CharField(blank=True, max_length=45, null=True)),
                ('MR3', models.CharField(blank=True, max_length=45, null=True)),
                ('MR4', models.CharField(blank=True, max_length=45, null=True)),
                ('MRNotes', models.CharField(blank=True, max_length=255, null=True)),
                ('MRNotes1', models.CharField(blank=True, max_length=255, null=True)),
                ('MRNotes2', models.CharField(blank=True, max_length=255, null=True)),
                ('MRNotes3', models.CharField(blank=True, max_length=255, null=True)),
                ('MRNotes4', models.CharField(blank=True, max_length=255, null=True)),
                ('BiopsySite', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsySite1', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsySite2', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsySite3', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsySite4', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsyResult', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsyResult1', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsyResult2', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsyResult3', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsyResult4', models.CharField(blank=True, max_length=45, null=True)),
                ('BiopsyNotes', models.CharField(blank=True, max_length=255, null=True)),
                ('BiopsyNotes1', models.CharField(blank=True, max_length=255, null=True)),
                ('BiopsyNotes2', models.CharField(blank=True, max_length=255, null=True)),
                ('BiopsyNotes3', models.CharField(blank=True, max_length=255, null=True)),
                ('BiopsyNotes4', models.CharField(blank=True, max_length=255, null=True)),
                ('Notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s2_id', models.ForeignKey(blank=True, db_column='s2_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s2diagnosis')),
                ('s3_id', models.ForeignKey(blank=True, db_column='s3_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s3careplan')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('visitaction', models.ForeignKey(db_column='visitactions', on_delete=django.db.models.deletion.CASCADE, to='patient_data.followupactions', to_field='code')),
                ('visittype', models.ManyToManyField(to='patient_data.FollowupVisitsType')),
            ],
            options={
                'db_table': 's8_child_fup',
            },
        ),
        migrations.CreateModel(
            name='S7Assessment',
            fields=[
                ('s7_id', models.AutoField(primary_key=True, serialize=False)),
                ('as_date', models.DateTimeField()),
                ('txstatus', models.CharField(blank=True, max_length=45, null=True)),
                ('ecog', models.CharField(blank=True, max_length=45, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('fatigue', models.CharField(blank=True, max_length=45, null=True)),
                ('apetite', models.CharField(blank=True, max_length=45, null=True)),
                ('pain', models.CharField(blank=True, max_length=45, null=True)),
                ('dermatitis', models.CharField(blank=True, max_length=45, null=True)),
                ('skin_axilla', models.CharField(blank=True, max_length=45, null=True)),
                ('skin_scf', models.CharField(blank=True, max_length=45, null=True)),
                ('skin_imf', models.CharField(blank=True, max_length=45, null=True)),
                ('skin_uoq', models.CharField(blank=True, max_length=45, null=True)),
                ('skin_loq', models.CharField(blank=True, max_length=45, null=True)),
                ('skin_uiq', models.CharField(blank=True, max_length=45, null=True)),
                ('skin_liq', models.CharField(blank=True, max_length=45, null=True)),
                ('mucositis', models.CharField(blank=True, max_length=45, null=True)),
                ('esophagitis', models.CharField(blank=True, max_length=45, null=True)),
                ('naus_vom', models.CharField(blank=True, max_length=45, null=True)),
                ('cough', models.CharField(blank=True, max_length=45, null=True)),
                ('pruritis', models.CharField(blank=True, max_length=45, null=True)),
                ('dysphagia', models.CharField(blank=True, max_length=45, null=True)),
                ('hiccups', models.CharField(blank=True, max_length=45, null=True)),
                ('hoarseness', models.CharField(blank=True, max_length=45, null=True)),
                ('vertigo', models.CharField(blank=True, max_length=45, null=True)),
                ('conjunctivitis', models.CharField(blank=True, max_length=45, null=True)),
                ('dryeye', models.CharField(blank=True, max_length=45, null=True)),
                ('constipation', models.CharField(blank=True, max_length=45, null=True)),
                ('diarrhea', models.CharField(blank=True, max_length=45, null=True)),
                ('vomiting', models.CharField(blank=True, max_length=45, null=True)),
                ('edemaLimbs', models.CharField(blank=True, max_length=45, null=True)),
                ('fever', models.CharField(blank=True, max_length=45, null=True)),
                ('gaitDisturbance', models.CharField(blank=True, max_length=45, null=True)),
                ('localizedEdema', models.CharField(blank=True, max_length=45, null=True)),
                ('malaise', models.CharField(blank=True, max_length=45, null=True)),
                ('otitisexterna', models.CharField(blank=True, max_length=45, null=True)),
                ('otitismedia', models.CharField(blank=True, max_length=45, null=True)),
                ('papulopustularrash', models.CharField(blank=True, max_length=45, null=True)),
                ('rashacneiform', models.CharField(blank=True, max_length=45, null=True)),
                ('rashmaculpapular', models.CharField(blank=True, max_length=45, null=True)),
                ('rashpustular', models.CharField(blank=True, max_length=45, null=True)),
                ('pharyngitis', models.CharField(blank=True, max_length=45, null=True)),
                ('tracheitis', models.CharField(blank=True, max_length=45, null=True)),
                ('hypercalcemia', models.CharField(blank=True, max_length=45, null=True)),
                ('hyperkalemia', models.CharField(blank=True, max_length=45, null=True)),
                ('hypokalemia', models.CharField(blank=True, max_length=45, null=True)),
                ('hypernatremia', models.CharField(blank=True, max_length=45, null=True)),
                ('hypoalbuminemia', models.CharField(blank=True, max_length=45, null=True)),
                ('hypocalcemia', models.CharField(blank=True, max_length=45, null=True)),
                ('hyponatremia', models.CharField(blank=True, max_length=45, null=True)),
                ('tls', models.CharField(blank=True, max_length=45, null=True)),
                ('arthralgia', models.CharField(blank=True, max_length=45, null=True)),
                ('bonepain', models.CharField(blank=True, max_length=45, null=True)),
                ('trismus', models.CharField(blank=True, max_length=45, null=True)),
                ('ataxia', models.CharField(blank=True, max_length=45, null=True)),
                ('cognitivedisturbance', models.CharField(blank=True, max_length=45, null=True)),
                ('concentration', models.CharField(blank=True, max_length=45, null=True)),
                ('consciousness', models.CharField(blank=True, max_length=45, null=True)),
                ('dysgeusia', models.CharField(blank=True, max_length=45, null=True)),
                ('headache', models.CharField(blank=True, max_length=45, null=True)),
                ('somnolence', models.CharField(blank=True, max_length=45, null=True)),
                ('lethargy', models.CharField(blank=True, max_length=45, null=True)),
                ('memoryimpairment', models.CharField(blank=True, max_length=45, null=True)),
                ('radiculitis', models.CharField(blank=True, max_length=45, null=True)),
                ('anxiety', models.CharField(blank=True, max_length=45, null=True)),
                ('confusion', models.CharField(blank=True, max_length=45, null=True)),
                ('depression', models.CharField(blank=True, max_length=45, null=True)),
                ('insomnia', models.CharField(blank=True, max_length=45, null=True)),
                ('hematuria', models.CharField(blank=True, max_length=45, null=True)),
                ('aspiration', models.CharField(blank=True, max_length=45, null=True)),
                ('epistaxis', models.CharField(blank=True, max_length=45, null=True)),
                ('dyspnea', models.CharField(blank=True, max_length=45, null=True)),
                ('laryngealedema', models.CharField(blank=True, max_length=45, null=True)),
                ('pneumonitis', models.CharField(blank=True, max_length=45, null=True)),
                ('pulmonaryfibrosis', models.CharField(blank=True, max_length=45, null=True)),
                ('alopecia', models.CharField(blank=True, max_length=45, null=True)),
                ('hotflashes', models.CharField(blank=True, max_length=45, null=True)),
                ('anemia', models.CharField(blank=True, max_length=45, null=True)),
                ('platelet', models.CharField(blank=True, max_length=45, null=True)),
                ('leukopenia', models.CharField(blank=True, max_length=45, null=True)),
                ('neutropenia', models.CharField(blank=True, max_length=45, null=True)),
                ('symp1', models.CharField(blank=True, max_length=100, null=True)),
                ('symp2', models.CharField(blank=True, max_length=100, null=True)),
                ('symp3', models.CharField(blank=True, max_length=100, null=True)),
                ('symp4', models.CharField(blank=True, max_length=100, null=True)),
                ('symp5', models.CharField(blank=True, max_length=100, null=True)),
                ('symp6', models.CharField(blank=True, max_length=100, null=True)),
                ('symp7', models.CharField(blank=True, max_length=100, null=True)),
                ('symp1type', models.CharField(blank=True, max_length=15, null=True)),
                ('symp2type', models.CharField(blank=True, max_length=15, null=True)),
                ('symp3type', models.CharField(blank=True, max_length=15, null=True)),
                ('symp4type', models.CharField(blank=True, max_length=15, null=True)),
                ('symp5type', models.CharField(blank=True, max_length=15, null=True)),
                ('symp6type', models.CharField(blank=True, max_length=15, null=True)),
                ('symp7type', models.CharField(blank=True, max_length=15, null=True)),
                ('drugrx1', models.CharField(blank=True, max_length=45, null=True)),
                ('drugrx2', models.CharField(blank=True, max_length=45, null=True)),
                ('drugrx3', models.CharField(blank=True, max_length=45, null=True)),
                ('drugrx4', models.CharField(blank=True, max_length=45, null=True)),
                ('drugrx5', models.CharField(blank=True, max_length=45, null=True)),
                ('drugrx6', models.CharField(blank=True, max_length=45, null=True)),
                ('rx1fx', models.CharField(blank=True, max_length=15, null=True)),
                ('rx2fx', models.CharField(blank=True, max_length=15, null=True)),
                ('rx3fx', models.CharField(blank=True, max_length=15, null=True)),
                ('rx4fx', models.CharField(blank=True, max_length=15, null=True)),
                ('rx5fx', models.CharField(blank=True, max_length=15, null=True)),
                ('rx6fx', models.CharField(blank=True, max_length=15, null=True)),
                ('rx1route', models.CharField(blank=True, max_length=15, null=True)),
                ('rx2route', models.CharField(blank=True, max_length=15, null=True)),
                ('rx3route', models.CharField(blank=True, max_length=15, null=True)),
                ('rx4route', models.CharField(blank=True, max_length=15, null=True)),
                ('rx5route', models.CharField(blank=True, max_length=15, null=True)),
                ('rx6route', models.CharField(blank=True, max_length=15, null=True)),
                ('rx1dur', models.IntegerField(blank=True, null=True)),
                ('rx2dur', models.IntegerField(blank=True, null=True)),
                ('rx3dur', models.IntegerField(blank=True, null=True)),
                ('rx4dur', models.IntegerField(blank=True, null=True)),
                ('rx5dur', models.IntegerField(blank=True, null=True)),
                ('rx6dur', models.IntegerField(blank=True, null=True)),
                ('rx1inst', models.CharField(blank=True, max_length=100, null=True)),
                ('rx2inst', models.CharField(blank=True, max_length=100, null=True)),
                ('rx3inst', models.CharField(blank=True, max_length=100, null=True)),
                ('rx4inst', models.CharField(blank=True, max_length=100, null=True)),
                ('rx5inst', models.CharField(blank=True, max_length=100, null=True)),
                ('rx6inst', models.CharField(blank=True, max_length=100, null=True)),
                ('rxdose1', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rxdose2', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rxdose3', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rxdose4', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rxdose5', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rxdose6', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rxunit1', models.CharField(blank=True, max_length=10, null=True)),
                ('rxunit2', models.CharField(blank=True, max_length=10, null=True)),
                ('rxunit3', models.CharField(blank=True, max_length=10, null=True)),
                ('rxunit4', models.CharField(blank=True, max_length=10, null=True)),
                ('rxunit5', models.CharField(blank=True, max_length=10, null=True)),
                ('rxunit6', models.CharField(blank=True, max_length=10, null=True)),
                ('fxdone', models.IntegerField(blank=True, null=True)),
                ('intervention1', models.CharField(blank=True, max_length=45, null=True)),
                ('intervention2', models.CharField(blank=True, max_length=45, null=True)),
                ('intervention3', models.CharField(blank=True, max_length=45, null=True)),
                ('intervention4', models.CharField(blank=True, max_length=45, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s4_id', models.ForeignKey(db_column='s4_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s4rt')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 's7_child_as',
            },
        ),
        migrations.CreateModel(
            name='S6Surgery',
            fields=[
                ('s6_id', models.AutoField(primary_key=True, serialize=False)),
                ('admissiondate', models.DateTimeField(blank=True, null=True)),
                ('sxdate', models.DateTimeField(blank=True, null=True)),
                ('dischargedate', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s3_id', models.ForeignKey(db_column='s3_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s3careplan')),
                ('sxtype', models.ManyToManyField(to='patient_data.SxCodes')),
                ('sxunit', models.ForeignKey(blank=True, db_column='sxunit', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.referredby', to_field='refby')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 's6_child_cp_sx',
            },
        ),
        migrations.CreateModel(
            name='S6HPE',
            fields=[
                ('s6hpe_id', models.AutoField(primary_key=True, serialize=False)),
                ('hpedate', models.DateTimeField(blank=True, null=True)),
                ('hpeno', models.CharField(blank=True, max_length=45, null=True)),
                ('gleasonsp', models.IntegerField(blank=True, null=True)),
                ('gleasonss', models.IntegerField(blank=True, null=True)),
                ('gleasonst', models.IntegerField(blank=True, null=True)),
                ('gleasons', models.IntegerField(blank=True, null=True)),
                ('psa_level', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('psa_date', models.DateTimeField(blank=True, null=True)),
                ('tumorsized1', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tumorsized2', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tumorsized3', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('nrl1', models.IntegerField(blank=True, null=True)),
                ('npl1', models.IntegerField(blank=True, null=True)),
                ('nrl2', models.IntegerField(blank=True, null=True)),
                ('npl2', models.IntegerField(blank=True, null=True)),
                ('nrl3', models.IntegerField(blank=True, null=True)),
                ('npl3', models.IntegerField(blank=True, null=True)),
                ('nrl4', models.IntegerField(blank=True, null=True)),
                ('npl4', models.IntegerField(blank=True, null=True)),
                ('nrl5', models.IntegerField(blank=True, null=True)),
                ('npl5', models.IntegerField(blank=True, null=True)),
                ('nrl6', models.IntegerField(blank=True, null=True)),
                ('npl6', models.IntegerField(blank=True, null=True)),
                ('nrl7', models.IntegerField(blank=True, null=True)),
                ('npl7', models.IntegerField(blank=True, null=True)),
                ('nrl8', models.IntegerField(blank=True, null=True)),
                ('npl8', models.IntegerField(blank=True, null=True)),
                ('nrl9', models.IntegerField(blank=True, null=True)),
                ('npl9', models.IntegerField(blank=True, null=True)),
                ('nrl10', models.IntegerField(blank=True, null=True)),
                ('npl10', models.IntegerField(blank=True, null=True)),
                ('nrl11', models.IntegerField(blank=True, null=True)),
                ('npl11', models.IntegerField(blank=True, null=True)),
                ('nrl12', models.IntegerField(blank=True, null=True)),
                ('npl12', models.IntegerField(blank=True, null=True)),
                ('nodesr', models.IntegerField(blank=True, null=True)),
                ('nodesp', models.IntegerField(blank=True, null=True)),
                ('textension', models.CharField(blank=True, max_length=100, null=True)),
                ('lvi_vi', models.CharField(blank=True, max_length=45, null=True)),
                ('pni', models.CharField(blank=True, max_length=45, null=True)),
                ('ene', models.CharField(blank=True, max_length=45, null=True)),
                ('margins', models.CharField(blank=True, max_length=45, null=True)),
                ('marginb', models.CharField(blank=True, max_length=45, null=True)),
                ('marginv', models.CharField(blank=True, max_length=45, null=True)),
                ('marginp', models.CharField(blank=True, max_length=45, null=True)),
                ('marginpp', models.CharField(blank=True, max_length=45, null=True)),
                ('marginvp', models.CharField(blank=True, max_length=45, null=True)),
                ('marginprox', models.CharField(blank=True, max_length=45, null=True)),
                ('margindist', models.CharField(blank=True, max_length=45, null=True)),
                ('margincircum', models.CharField(blank=True, max_length=45, null=True)),
                ('marginmedial', models.CharField(blank=True, max_length=45, null=True)),
                ('marginlateral', models.CharField(blank=True, max_length=45, null=True)),
                ('er', models.CharField(blank=True, max_length=45, null=True)),
                ('pr', models.CharField(blank=True, max_length=45, null=True)),
                ('her2neu', models.CharField(blank=True, max_length=45, null=True)),
                ('braca1', models.CharField(blank=True, max_length=45, null=True)),
                ('braca2', models.CharField(blank=True, max_length=45, null=True)),
                ('egfr', models.CharField(blank=True, max_length=45, null=True)),
                ('alk', models.CharField(blank=True, max_length=45, null=True)),
                ('ros', models.CharField(blank=True, max_length=45, null=True)),
                ('pdl1', models.CharField(blank=True, max_length=45, null=True)),
                ('pdl1_val', models.IntegerField(blank=True, null=True)),
                ('braf', models.CharField(blank=True, max_length=45, null=True)),
                ('met', models.CharField(blank=True, max_length=45, null=True)),
                ('ret', models.CharField(blank=True, max_length=45, null=True)),
                ('hpv', models.CharField(blank=True, max_length=45, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('hpegrade', models.ForeignKey(blank=True, db_column='hpegrade', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.biopsygrade')),
                ('icd_path_code', models.ForeignKey(blank=True, db_column='icd_path_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.hpe')),
                ('pajccedition', models.ForeignKey(blank=True, db_column='pajccedition', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.ajccedition')),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('pm', models.ForeignKey(blank=True, db_column='pm', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.clinm')),
                ('pn', models.ForeignKey(blank=True, db_column='pn', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.clinn')),
                ('pstagegroup', models.ForeignKey(blank=True, db_column='pstagegroup', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.stagegroup')),
                ('pt', models.ForeignKey(blank=True, db_column='pt', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.clint')),
                ('s6_id', models.ForeignKey(db_column='s6_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s6surgery')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 's6_child_cp_sxhpe',
            },
        ),
        migrations.CreateModel(
            name='S5Chemo',
            fields=[
                ('s5_id', models.AutoField(primary_key=True, serialize=False)),
                ('cycleno', models.IntegerField(blank=True, null=True)),
                ('chemo_day', models.CharField(blank=True, max_length=45, null=True)),
                ('chemodate', models.DateTimeField(blank=True, null=True)),
                ('d1dose', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sdate1', models.DateTimeField(blank=True, null=True)),
                ('fdate1', models.DateTimeField(blank=True, null=True)),
                ('d2dose', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sdate2', models.DateTimeField(blank=True, null=True)),
                ('fdate2', models.DateTimeField(blank=True, null=True)),
                ('d3dose', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sdate3', models.DateTimeField(blank=True, null=True)),
                ('fdate3', models.DateTimeField(blank=True, null=True)),
                ('d4dose', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sdate4', models.DateTimeField(blank=True, null=True)),
                ('fdate4', models.DateTimeField(blank=True, null=True)),
                ('d5dose', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sdate5', models.DateTimeField(blank=True, null=True)),
                ('fdate5', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('chemo_protocol', models.ForeignKey(blank=True, db_column='chemo_protocol_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.chemoprotocolnew')),
                ('drug1', models.ForeignKey(blank=True, db_column='drug1', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug1', to='patient_data.chemodrugs')),
                ('drug2', models.ForeignKey(blank=True, db_column='drug2', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug2', to='patient_data.chemodrugs')),
                ('drug3', models.ForeignKey(blank=True, db_column='drug3', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug3', to='patient_data.chemodrugs')),
                ('drug4', models.ForeignKey(blank=True, db_column='drug4', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug4', to='patient_data.chemodrugs')),
                ('drug5', models.ForeignKey(blank=True, db_column='drug5', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug5', to='patient_data.chemodrugs')),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s3_id', models.ForeignKey(db_column='s3_id', on_delete=django.db.models.deletion.CASCADE, related_name='ch_careplan_id', to='patient_data.s3careplan')),
                ('unit', models.ForeignKey(blank=True, db_column='unit', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.referredby', to_field='refby')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 's5_child_cp_ch',
            },
        ),
        migrations.AddField(
            model_name='s4rt',
            name='rtsitecode',
            field=models.ForeignKey(blank=True, db_column='rtsitecode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.site'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='rtstatus',
            field=models.ForeignKey(blank=True, db_column='rtstatus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rtstatus', to='patient_data.rtstatus'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='s2_id',
            field=models.ForeignKey(db_column='s2_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rt_diagnosis_id', to='patient_data.s2diagnosis'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='s3_id',
            field=models.ForeignKey(db_column='s3_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rt_careplan_id', to='patient_data.s3careplan'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='simid',
            field=models.ForeignKey(db_column='simid', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.simulation'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='studygp',
            field=models.ManyToManyField(blank=True, to='patient_data.StudyGroup'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='tech1',
            field=models.ForeignKey(blank=True, db_column='tech1', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tech1', to='patient_data.rttech'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='tech2',
            field=models.ForeignKey(blank=True, db_column='tech2', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tech2', to='patient_data.rttech'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='tech3',
            field=models.ForeignKey(blank=True, db_column='tech3', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tech3', to='patient_data.rttech'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='tech4',
            field=models.ForeignKey(blank=True, db_column='tech4', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tech4', to='patient_data.rttech'),
        ),
        migrations.AddField(
            model_name='s4rt',
            name='user_id',
            field=models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='s3careplan',
            name='studyprotocol',
            field=models.ManyToManyField(blank=True, to='patient_data.StudyGroup'),
        ),
        migrations.AddField(
            model_name='s3careplan',
            name='user_id',
            field=models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='c_stage_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.stagegroup'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='c_t',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.clint'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='diagnosis',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.ourdiagnosis'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='dx_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.dxtype'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='icd_main_topo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.icdmainsites'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='icd_path_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.hpe'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='icd_topo_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='patient_data.site'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='parent_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber'),
        ),
        migrations.AddField(
            model_name='s2diagnosis',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PrimaryDVH',
            fields=[
                ('s4_dvh_id', models.AutoField(primary_key=True, serialize=False)),
                ('vol', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('value', models.DecimalField(decimal_places=5, max_digits=15, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parameters', models.ForeignKey(db_column='parameters', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.dvhparameters', to_field='code')),
                ('s4_id', models.ForeignKey(db_column='s4_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s4rt')),
                ('str_name', models.ForeignKey(db_column='str_name', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.strname', to_field='code')),
                ('str_type', models.ForeignKey(db_column='str_type', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.strtype', to_field='code')),
                ('target_class_base', models.ForeignKey(blank=True, db_column='target_class_base', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.strnameclassifierbase', to_field='code')),
                ('target_class_custom', models.ForeignKey(blank=True, db_column='target_class_custom', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.strnameclassifiercustom', to_field='code')),
                ('target_class_dose', models.ForeignKey(blank=True, db_column='target_class_dose', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.strnameclassifierdose', to_field='code')),
                ('target_class_image', models.ForeignKey(blank=True, db_column='target_class_image', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.strnameclassifierimage', to_field='code')),
                ('target_class_number', models.ForeignKey(blank=True, db_column='target_class_number', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.strnameclassifiernumber', to_field='code')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'primarydvh',
            },
        ),
        migrations.AddField(
            model_name='presimulation',
            name='final_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='final_status', to='patient_data.rttech'),
        ),
        migrations.AddField(
            model_name='presimulation',
            name='presimparent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber'),
        ),
        migrations.AddField(
            model_name='presimulation',
            name='s3_id',
            field=models.ForeignKey(blank=True, db_column='s3_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.s3careplan'),
        ),
        migrations.AddField(
            model_name='presimulation',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('s8_prescription_id', models.AutoField(primary_key=True, serialize=False)),
                ('symptoms', models.CharField(blank=True, max_length=255, null=True)),
                ('symptoms_type', models.CharField(blank=True, max_length=255, null=True)),
                ('symp_duration', models.IntegerField()),
                ('drug_name', models.CharField(blank=True, max_length=255, null=True)),
                ('dosage', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('route', models.CharField(blank=True, max_length=255, null=True)),
                ('frequency', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s8_id', models.ForeignKey(db_column='s8_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s8fup')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'prescription',
            },
        ),
        migrations.CreateModel(
            name='PFTDetails',
            fields=[
                ('pft_id', models.AutoField(primary_key=True, serialize=False)),
                ('StudyDate', models.DateTimeField()),
                ('DLCO', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('DLCOpred', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('DLCO_VA', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('DLCO_VApred', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('prFEV1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('prFEV1pred', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('poFEV1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('poFEV1pred', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('FEV1_change', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('prFEV1_FVC', models.DecimalField(blank=True, db_column='prFEV1/FVC', decimal_places=2, max_digits=6, null=True)),
                ('prFEV1_FVCpred', models.DecimalField(blank=True, db_column='prFEV1/FVCpred', decimal_places=2, max_digits=6, null=True)),
                ('poFEV1_FVC', models.DecimalField(blank=True, db_column='poFEV1/FVC', decimal_places=2, max_digits=6, null=True)),
                ('poFEV1_FVCpred', models.DecimalField(blank=True, db_column='poFEV1/FVCpred', decimal_places=2, max_digits=6, null=True)),
                ('FEV1_FVC_change', models.DecimalField(blank=True, db_column='FEV1/FVC_change', decimal_places=2, max_digits=6, null=True)),
                ('Notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s8_id', models.ForeignKey(db_column='s8_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s8fup')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pftdetails',
            },
        ),
        migrations.CreateModel(
            name='InvestigationsPath',
            fields=[
                ('s8_path_id', models.AutoField(primary_key=True, serialize=False)),
                ('biopsy_type', models.CharField(blank=True, max_length=255, null=True)),
                ('biopsy_date', models.DateField(blank=True, null=True)),
                ('biopsy_result_details', models.TextField(blank=True, null=True)),
                ('lab_name', models.CharField(blank=True, max_length=255, null=True)),
                ('lab_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField()),
                ('molecular_profile', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('biopsy_location', models.ForeignKey(blank=True, db_column='biopsy_location', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.fmaid')),
                ('biopsy_result', models.ForeignKey(blank=True, db_column='biopsy_result', null=True, on_delete=django.db.models.deletion.CASCADE, to='patient_data.hpe')),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s8_id', models.ForeignKey(db_column='s8_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s8fup')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inv_path',
            },
        ),
        migrations.CreateModel(
            name='InvestigationsLabs',
            fields=[
                ('s8_labs_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_name', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.DateField(blank=True, null=True)),
                ('test_result', models.CharField(blank=True, max_length=255, null=True)),
                ('test_result_details', models.TextField(blank=True, null=True)),
                ('test_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('normal_range', models.TextField(blank=True, null=True)),
                ('lab_name', models.CharField(blank=True, max_length=255, null=True)),
                ('lab_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('cancer_related', models.BooleanField(default=False)),
                ('tumor_marker_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tumor_marker_level', models.FloatField(blank=True, null=True)),
                ('tumor_marker_level_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('tumor_marker_normal_range', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s8_id', models.ForeignKey(db_column='s8_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s8fup')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inv_labs',
            },
        ),
        migrations.CreateModel(
            name='InvestigationsImaging',
            fields=[
                ('s8_imaging_id', models.AutoField(primary_key=True, serialize=False)),
                ('imaging_date', models.DateTimeField()),
                ('imaging_type', models.CharField(blank=True, max_length=255, null=True)),
                ('imaging_location', models.CharField(blank=True, max_length=255, null=True)),
                ('imaging_result', models.CharField(blank=True, max_length=255, null=True)),
                ('imaging_result_details', models.TextField(blank=True, null=True)),
                ('lab_name', models.CharField(blank=True, max_length=255, null=True)),
                ('lab_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s8_id', models.ForeignKey(db_column='s8_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s8fup')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inv_img',
            },
        ),
        migrations.CreateModel(
            name='CardiacMarkers',
            fields=[
                ('cm_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('trop_i', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('hs_crp', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('nt_probnp', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('rtstartdate', models.DateTimeField(blank=True, null=True)),
                ('planned_fr', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.CharField(blank=True, max_length=45, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('parent_id', models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s1parentmain', to_field='crnumber')),
                ('s8_id', models.ForeignKey(db_column='s8_id', on_delete=django.db.models.deletion.CASCADE, to='patient_data.s8fup')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cardiacmarkers',
            },
        ),
    ]
